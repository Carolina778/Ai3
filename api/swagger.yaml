---
swagger: "2.0"
info:
  description: "Registo e acompanhamento de encomendas de produtos numa empresa"
  version: "2.0.0"
  title: "Gestor de Encomendas Api"
host: "localhost:4000"
basePath: "/gestorencomendas-api/"
schemes:
- "http"
- "https"
paths:
  /utilizador:
    post:
      tags:
      - "Utilizador"
      summary: "Registar utilizador"
      description: "Registar um novo utilizador"
      operationId: "RegistarUtilizador"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "utilizador_"
        required: true
        schema:
          $ref: "#/definitions/utilizador_"
      responses:
        "201":
          description: "Registo efetuado com sucesso!"
        "204":
          description: "Erro sem conteúdo!"
        "226":
          description: "Erro em uso!"
        "400":
          description: "Requisição inválida!"
      x-swagger-router-controller: "Utilizador"
  /utilizador/{username}:
    get:
      tags:
      - "Utilizador"
      summary: "Buscar utilizador"
      description: "Buscar um utilizador"
      operationId: "BuscarUtilizadorPeloNome"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "Username do utilizador a buscado"
        required: true
        type: "string"
      responses:
        "201":
          description: "Buscado com sucesso!"
          schema:
            $ref: "#/definitions/utilizador_"
        "400":
          description: "Requisição inválida!"
        "404":
          description: "Utilizador não encontrado"
        "500":
          description: "Erro interno no servidor!"
      x-swagger-router-controller: "Utilizador"
    put:
      tags:
      - "Utilizador"
      summary: "Atualizar utilizador"
      description: "Atualizar um utilizador"
      operationId: "AtualizarUtilizador"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "Username do utilizador a ser atualizado"
        required: true
        type: "string"
      - in: "body"
        name: "utilizador_"
        description: "Objeto utilizador atualizado"
        required: true
        schema:
          $ref: "#/definitions/utilizador_"
      responses:
        "200":
          description: "Atualizado com sucesso!"
        "400":
          description: "Requisição inválida!"
        "404":
          description: "Utilizador não encontrado"
        "500":
          description: "Erro interno no servidor!"
      x-swagger-router-controller: "Utilizador"
  /utilizador/login:
    get:
      tags:
      - "Utilizador"
      summary: "Faz o login na API"
      description: "Faz o login na API"
      operationId: "LoginUtilizador"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "Username do utilizador para o login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "Password correspondente ao username"
        required: true
        type: "string"
      responses:
        "200":
          description: "Login efetuado com sucesso!"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
          schema:
            type: "string"
        "400":
          description: "Username e/ou password inválido"
      x-swagger-router-controller: "Utilizador"
  /utilizador/logout:
    get:
      tags:
      - "Utilizador"
      summary: "Faz o logout da API"
      description: "Faz o logout da API"
      operationId: "LogoutUtilizador"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "Logout realizado com sucesso"
      x-swagger-router-controller: "Utilizador"
  /utilizador/apagar{username}:
    delete:
      tags:
      - "Utilizador"
      summary: "Apagar utilizador"
      description: "Apagar um utilizador"
      operationId: "ApagarUtilizador"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "O nome do utilizador a ser eliminado"
        required: true
        type: "string"
      responses:
        "201":
          description: "Utilizador apagado com sucesso!"
        "204":
          description: "Erro sem conteúdo!"
        "226":
          description: "Erro em uso!"
        "400":
          description: "Nome inválido!"
        "404":
          description: "Utilizador não encontrado!"
        "500":
          description: "Erro interno no servidor!"
      x-swagger-router-controller: "Utilizador"
  /produto:
    get:
      tags:
      - "Produto"
      summary: "Mostrar todos os produtos"
      description: "Mostrar todos os produtos"
      operationId: "mostrarProduto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Produtos mostrados!"
          schema:
            type: "array"
            items:
              type: "string"
        "404":
          description: "Os produtos não foram encontrados!"
      x-swagger-router-controller: "Produto"
    post:
      tags:
      - "Produto"
      summary: "Adicionar produto"
      description: "Adicionar um novo produto"
      operationId: "adicionarProduto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "produto_"
        description: "Produto a ser adicionado à loja"
        required: true
        schema:
          $ref: "#/definitions/produto_"
      responses:
        "201":
          description: "Produto adicionado com sucesso!"
        "204":
          description: "Erro sem conteúdo!"
        "226":
          description: "Erro em uso!"
        "400":
          description: "Requisição inválida!"
        "500":
          description: "Erro interno no servidor!"
      x-swagger-router-controller: "Produto"
    put:
      tags:
      - "Produto"
      summary: "Atualizar um produto"
      description: "Atualizar um produto"
      operationId: "AtualizarProduto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "produto_"
        description: "Objeto produto a ser atualizado"
        required: true
        schema:
          $ref: "#/definitions/produto_"
      responses:
        "201":
          description: "Atualizado com sucesso!"
        "400":
          description: "Requisição inválida!"
        "404":
          description: "Produto não encontrado"
      x-swagger-router-controller: "Produto"
  /produto/{id_produto}:
    delete:
      tags:
      - "Produto"
      summary: "Apaga produto pelo ID"
      description: "Apaga produto pelo ID"
      operationId: "apagarProdutoId"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_produto"
        in: "path"
        description: "ID do produto a ser apagado"
        required: true
        type: "string"
      responses:
        "200":
          description: "Produto apagado com sucesso!"
        "400":
          description: "ID do produto inválido!"
        "404":
          description: "Produto não encontrado!"
      x-swagger-router-controller: "Produto"
  /encomenda:
    post:
      tags:
      - "Encomenda"
      summary: "Registar encomenda"
      description: "Registar uma nova encomenda"
      operationId: "RegistarEncomenda"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "encomenda_"
        description: "Objeto encomenda"
        required: true
        schema:
          $ref: "#/definitions/encomenda_"
      responses:
        "200":
          description: "Encomenda realizada com sucesso!"
        "400":
          description: "Encomenda inválida!"
      x-swagger-router-controller: "Encomenda"
    put:
      tags:
      - "Encomenda"
      summary: "Atualizar uma encomenda"
      description: "Atualizar uma encomenda"
      operationId: "AtualizarEncomenda"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "encomenda_"
        description: "Objeto encomenda a ser atualizada"
        required: true
        schema:
          $ref: "#/definitions/encomenda_"
      responses:
        "201":
          description: "Atualizado com sucesso!"
        "400":
          description: "Requisição inválida!"
        "404":
          description: "Encomenda não encontrada!"
      x-swagger-router-controller: "Encomenda"
  /encomenda/{id_encomenda}:
    get:
      tags:
      - "Encomenda"
      summary: "Encontrar encomenda pelo ID"
      description: "Encontrar encomenda pelo ID"
      operationId: "EncontrarEncomenda"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id_encomenda"
        in: "path"
        description: "ID da encomenda a encontrar"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Encomenda encontrada com sucesso!"
          schema:
            $ref: "#/definitions/encomenda_"
        "400":
          description: "ID da encomenda invalido!"
        "404":
          description: "Encomenda não encontrada!"
      x-swagger-router-controller: "Encomenda"
definitions:
  utilizador_:
    type: "object"
    properties:
      id_funcionario:
        type: "integer"
      funcionario:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      username:
        type: "string"
      datanasc:
        type: "string"
        format: "date"
    example:
      password: "password"
      datanasc: "2000-01-23"
      id_funcionario: 0
      funcionario: "funcionario"
      email: "email"
      username: "username"
  produto_:
    type: "object"
    properties:
      id_produto:
        type: "string"
      nome:
        type: "string"
      tipo:
        type: "string"
      preço:
        type: "number"
        format: "double"
      descrição:
        type: "string"
      disp:
        type: "string"
        enum:
        - "Disponível"
        - "Esgotado"
      stock:
        type: "integer"
        format: "int32"
  encomenda_:
    type: "object"
    properties:
      id_encomenda:
        type: "integer"
      estado:
        type: "string"
        enum:
        - "Criada"
        - "Enviada"
        - "Cancelada"
        - "Entregue"
      data_cria:
        type: "string"
        format: "date"
    example:
      estado: "Criada"
      data_cria: "2000-01-23"
      id_encomenda: 0
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
